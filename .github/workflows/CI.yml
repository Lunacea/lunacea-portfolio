# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
# yaml-language-server: $schema=https://raw.githubusercontent.com/SchemaStore/schemastore/master/src/schemas/json/github-workflow.json
name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      skip-tests:
        description: 'Skip test execution'
        required: false
        default: false
        type: boolean
      skip-e2e:
        description: 'Skip E2E tests'
        required: false
        default: false
        type: boolean

# 並行実行制御: 同一ブランチでの重複実行を防止
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# 最小権限の原則: 各Jobで必要な権限のみを個別に設定
permissions:
  contents: read
  security-events: write

# 環境変数は各ステップで直接参照（警告抑制のため）

jobs:
  # 並列実行可能なJob群
  lint:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
    steps:
      - name: Setup Bun Environment
        uses: ./.github/workflows/setup-bun.yml
        with:
          cache-key: 'lint'
      
      - name: Run linting
        run: bun run lint --max-warnings 0
      
      - name: Run type checking
        run: bun run typecheck
      
      - name: Upload lint results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: lint-results-${{ github.sha }}
          path: |
            .eslintcache
            tsconfig.tsbuildinfo
          retention-days: 7

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: ${{ !inputs.skip-tests }}
    permissions:
      contents: read
    strategy:
      matrix:
        node-version: [18, 20]
      fail-fast: false
    steps:
      - name: Setup Bun Environment
        uses: ./.github/workflows/setup-bun.yml
        with:
          cache-key: 'test-${{ matrix.node-version }}'
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Run tests
        run: bun run test -- --coverage
      
      # Codecovは使用していないためコメントアウト
      # - name: Upload coverage reports to Codecov
      #   if: ${{ env.CODECOV_TOKEN != '' }}
      #   uses: codecov/codecov-action@v5
      #   env:
      #     CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.node-version }}-${{ github.sha }}
          path: |
            test-results/
            coverage/
          retention-days: 7

  build:
    name: Build Application
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [lint, test]
    if: always() && (needs.lint.result == 'success' && (needs.test.result == 'success' || needs.test.result == 'skipped'))
    permissions:
      contents: read
    outputs:
      build-id: ${{ steps.build-info.outputs.build-id }}
      build-size: ${{ steps.build-info.outputs.build-size }}
    steps:
      - name: Setup Bun Environment
        uses: ./.github/workflows/setup-bun.yml
        with:
          cache-key: 'build'
      
      - name: Build application
        id: build
        run: bun run build
      
      - name: Extract build information
        id: build-info
        run: |
          if [ -f ".next/BUILD_ID" ]; then
            BUILD_ID=$(cat .next/BUILD_ID)
            echo "build-id=$BUILD_ID" >> $GITHUB_OUTPUT
          fi
          BUILD_SIZE=$(du -sh .next/ | cut -f1)
          echo "build-size=$BUILD_SIZE" >> $GITHUB_OUTPUT
          echo "Build ID: $BUILD_ID"
          echo "Build Size: $BUILD_SIZE"
      
      - name: Verify build output
        run: |
          echo "Build output contents:"
          ls -la .next/
          echo "BUILD_ID exists: $([ -f ".next/BUILD_ID" ] && echo "YES" || echo "NO")"
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output-${{ github.sha }}
          path: .next/
          retention-days: 7

  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: build
    if: ${{ !inputs.skip-e2e && needs.build.result == 'success' }}
    permissions:
      contents: read
    strategy:
      matrix:
        browser: [chromium, webkit, firefox]
      fail-fast: false
    steps:
      - name: Setup Bun Environment
        uses: ./.github/workflows/setup-bun.yml
        with:
          cache-key: 'e2e'
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output-${{ github.sha }}
          path: .next/
        continue-on-error: true
      
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ matrix.browser }}-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-playwright-${{ matrix.browser }}-
            ${{ runner.os }}-playwright-
      
      - name: Install Playwright
        run: |
          # CI環境では依存関係のインストールをスキップして高速化
          if [ "${{ matrix.browser }}" = "chromium" ]; then
            bunx playwright install chromium --with-deps
          elif [ "${{ matrix.browser }}" = "firefox" ]; then
            bunx playwright install firefox --with-deps
          elif [ "${{ matrix.browser }}" = "webkit" ]; then
            bunx playwright install webkit --with-deps
          else
            bunx playwright install --with-deps ${{ matrix.browser }}
          fi
      
      - name: Run E2E tests
        run: bunx playwright test --project=${{ matrix.browser }}
        env:
          ARCJET_ENV: "development"
          NODE_ENV: "test"
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: "test-key"
          NEXT_PUBLIC_CLERK_SIGN_IN_URL: "http://localhost:3000/sign-in"
          # BGMプレイヤーのテスト用環境変数
          NEXT_PUBLIC_ENABLE_BGM: "true"
          NEXT_PUBLIC_BGM_AUTOPLAY: "false"
          NEXT_PUBLIC_BGM_VOLUME: "0.5"
          # ビジュアルテスト用環境変数
          NEXT_PUBLIC_DISABLE_BGM_MODAL: "true"
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results-${{ matrix.browser }}-${{ github.sha }}
          path: test-results/
          retention-days: 7
      
      - name: Upload Playwright Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.browser }}-${{ github.sha }}
          path: playwright-report/
          retention-days: 7

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: build
    if: needs.build.result == 'success'
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Run Security Scan
        uses: ./.github/workflows/security-scan.yml
        with:
          scan-type: 'fs'
          severity: 'CRITICAL,HIGH'
