# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
# yaml-language-server: $schema=https://raw.githubusercontent.com/SchemaStore/schemastore/master/src/schemas/json/github-workflow.json
name: Checkly E2E Tests

on: [deployment_status]

# 最小権限の原則
permissions:
  contents: read
  deployments: read

# 環境変数は各ステップで直接参照（警告抑制のため）

jobs:
  test-e2e:
    strategy:
      matrix:
        bun-version: [latest]

    # Only run when the deployment was successful
    if: github.event.deployment_status.state == 'success'

    name: Test E2E on Checkly
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
        with:
          ref: '${{ github.ref }}'
          fetch-depth: 0

      - name: Set branch name # workaround to detect branch name in "deployment_status" actions
        run: echo "CHECKLY_TEST_REPO_BRANCH=$(git show -s --pretty=%D HEAD | tr -s ',' '\n' | sed 's/^ //' | grep -e 'origin/' | head -1 | sed 's/\origin\///g')" >> $GITHUB_ENV

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ matrix.bun-version }}

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-checkly-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-checkly-
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install

      - name: Build
        run: bun run build

      # Checklyは使用していないためコメントアウト
      # - name: Run checks # run the checks passing in the ENVIRONMENT_URL and recording a test session.
      #   id: run-checks
      #   run: bunx checkly test --reporter=github --record
      #   env:
      #     ENVIRONMENT_URL: ${{ github.event.deployment_status.environment_url }}

      # Checklyは使用していないためコメントアウト
      # - name: Create summary # export the markdown report to the job summary.
      #   id: create-summary
      #   run: cat checkly-github-report.md > $GITHUB_STEP_SUMMARY

      # - name: Deploy checks # if the test run was successful and we are on Production, deploy the checks
      #   id: deploy-checks
      #   if: steps.run-checks.outcome == 'success' && github.event.deployment_status.environment == 'Production'
      #   run: bunx checkly deploy --force
